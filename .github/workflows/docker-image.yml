name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  get-package-version:
    runs-on: ubuntu-latest

    steps:
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version@v1.3.1
        outputs:
          current-version: ${{ steps.package-version.outputs.current-version }}


  check-for-existing-docker-image:
    name: Check Docker for Matching Tag
    runs-on: ubuntu-latest
    needs: get-package-version
    outputs:
      tag-exists: ${{steps.check-docker-outputs.tag-exists}}
    steps:
      - id: check-docker-frontend
        name: Check Docker for Frontend Tag
        uses: hipcamp/docker-tag-exists@v1
        with:
          image: hamzabalazs/moviezone
          tag: frontend-v${{ steps.package-version.outputs.current-version }}
      - id: check-docker-backend
        name: Check Docker for Backend Tag
        uses: hipcamp/docker-tag-exists@v1
        with:
          image: hamzabalazs/moviezone
          tag: backend-v${{ steps.package-version.outputs.current-version }}

  build:

    runs-on: ubuntu-latest
    needs: [check-for-existing-docker-image, get-package-version]
    if: needs.check-for-existing-docker-image.outputs.tag-exists != 'true'
    steps:
    - uses: actions/checkout@v3
    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push frontend Docker image
      with:
        image: hamzabalazs/moviezone
        tags: frontend-v${{ steps.package-version.outputs.current-version }}
        registry: docker.io
        directory: ./mozi-frontend
        dockerfile: mozi-frontend/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - uses: mr-smithers-excellent/docker-build-push@v5
      name: Build & push backend Docker image
      with:
        image: hamzabalazs/moviezone
        tags: backend-v${{ steps.package-version.outputs.current-version }}
        registry: docker.io
        directory: ./mozi-backend
        dockerfile: mozi-backend/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
